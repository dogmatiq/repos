on:
  workflow_call:
    secrets:
      AWS_ACCESS_KEY_ID:
        required: true
      AWS_SECRET_ACCESS_KEY:
        required: true
      DNSIMPLE_TOKEN:
        required: true

jobs:
  go:
    name: Go
    runs-on: ubuntu-latest

    outputs:
      has-dockerfile: ${{ steps.has-dockerfile.outputs.files_exists }}
      has-helm-chart: ${{ steps.has-helm-chart.outputs.files_exists }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version-file: go.mod
          check-latest: true

      - name: Checkout
        uses: actions/checkout@v4

      - name: Make
        run: make ci
        env:
          DOGMATIQ_TEST_AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          DOGMATIQ_TEST_AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          DOGMATIQ_TEST_DNSIMPLE_TOKEN: ${{ secrets.DNSIMPLE_TOKEN }}

      - name: Upload coverage report
        uses: codecov/codecov-action@v4

      - name: Detect Dockerfile
        id: has-dockerfile
        uses: andstor/file-existence-action@v2
        with:
          files: Dockerfile

      - name: Detect Helm chart
        id: has-helm-chart
        uses: andstor/file-existence-action@v2
        with:
          files: charts/Chart.yaml

      - name: Build Docker image
        if: steps.has-dockerfile.outputs.files_exists == 'true'
        run: docker buildx create --use && make docker

  docker:
    name: Publish Docker image
    runs-on: ubuntu-latest
    needs: go
    if: needs.go.outputs.has-dockerfile == 'true' && startsWith(github.ref , 'refs/tags/v')

    steps:
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version-file: go.mod
          check-latest: true

      - name: Build and push image
        env:
          DOCKER_TAGS: ${{ github.ref_name }}
        run: docker buildx create --use && make docker-push

  helm:
    name: Publish Helm chart
    runs-on: ubuntu-latest
    needs:
      - go
      - docker
    if: needs.go.outputs.has-helm-chart == 'true' && startsWith(github.ref , 'refs/tags/v')

    steps:
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Checkout
        uses: actions/checkout@v4

      - name: Package and push chart
        run: make helm-push
