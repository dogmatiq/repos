on:
  workflow_call:
    inputs:
      minio:
        description: Run a MinIO service during the build.
        type: boolean
        required: false
        default: false
      dynamodb:
        description: Run a DynamoDB service during the build.
        type: boolean
        required: false
        default: false
      postgres:
        description: Run a PostgreSQL service during the build.
        type: boolean
        required: false
        default: false
      mariadb:
        description: Run a MariaDB service during the build.
        type: boolean
        required: false
        default: false
      mysql:
        description: Run a MySQL service during the build.
        type: boolean
        required: false
        default: false

jobs:
  go:
    name: Go
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: go.mod
          check-latest: true

      - name: Make
        run: make ci

      - name: Upload coverage report
        uses: codecov/codecov-action@v5
        with:
          fail_ci_if_error: true
          token: ${{ secrets.CODECOV_TOKEN }}

    services:
      minio:
        image: ${{ inputs.minio && 'minio/minio:latest' || '' }}
        options: >-
          --health-cmd "curl -f http://localhost:9000/minio/health/live"
          --health-interval 2s
          --health-timeout 10s
          --health-start-period 30s
          --health-retries 10
        ports:
          - 9000/tcp
        env:
          MINIO_ACCESS_KEY: minio
          MINIO_SECRET_KEY: password

      dynamodb:
        image: ${{ inputs.dynamodb && 'amazon/dynamodb-local:latest' || '' }}
        options: >-
          --health-cmd "curl http://localhost:8000"
          --health-interval 2s
          --health-timeout 10s
          --health-start-period 30s
          --health-retries 10
        ports:
          - 8000/tcp

      mysql:
        image: ${{ inputs.mysql && 'mysql:latest' || '' }}
        options: >-
          --mount type=tmpfs,destination=/var/lib/mysql
          --health-cmd="mysqladmin ping --host 127.0.0.1 --port 3306 --user root --password=rootpass"
          --health-interval 2s
          --health-timeout 10s
          --health-start-period 30s
          --health-retries 10
        ports:
          - 3306/tcp
        env:
          MYSQL_ROOT_PASSWORD: rootpass

      mariadb:
        image: ${{ inputs.mariadb && 'mariadb:latest' || '' }}
        options: >-
          --mount type=tmpfs,destination=/var/lib/mysql
          --health-cmd="healthcheck.sh --su-mysql --connect --innodb_initialized"
          --health-interval 2s
          --health-timeout 10s
          --health-start-period 30s
          --health-retries 10
        ports:
          - 3306/tcp
        env:
          MARIADB_ROOT_PASSWORD: rootpass

      postgres:
        image: ${{ inputs.postgres && 'postgres:latest' || '' }}
        options: >-
          --health-cmd pg_isready
          --health-interval 2s
          --health-timeout 10s
          --health-start-period 30s
          --health-retries 10
        ports:
          - 5432/tcp
        env:
          POSTGRES_PASSWORD: rootpass
